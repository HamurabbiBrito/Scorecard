generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  username      String    @unique
  password      String
  role          UserRole  @default(Operador)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
}

enum UserRole {
  SA
  Operador
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token         String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model AccidentReport {
  id                      String   @id @default(uuid())
  fecha                   DateTime
  area                    String
  cantidadAccidentes      Int
  cantidadCuasiAccidentes Int
  diasUltimoAccidente     Int
  notas                   String?
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt
}

model QualityReport {
  id                      String   @id @default(uuid())
  fecha                   DateTime
  area                    String
  qualityCreditNoteUSD    String
  qualityCreditNoteUSDBattery Float
  today                   Int
  mesAnterior             String
  numero                  String
  cantidadQuejas          Int
  cantidadQuejasBateria   Int
  observaciones           String?
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt
}

model KaizenReport {
  id          String   @id @default(uuid())
  fecha       DateTime
  area        String
  proyecto    String
  descripcion String
  impacto     String
  estado      String   @default("pendiente")
  responsable String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model RHReport {
  id               String   @id @default(uuid())
  fecha            DateTime
  area             String
  personalActual   Int
  vacantes         Int
  necesidadesCapacitacion String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model FleteReport {
  id          String   @id @default(uuid())
  fecha       DateTime
  area        String
  transportista String
  costo       Float
  descripcion String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ControlReport {
  id          String   @id @default(uuid())
  fecha       DateTime
  area        String
  turno       String
  metaDiaria  Int
  producido   Int
  rechazos    Int
  eficiencia  Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ProductionReport {
  id          String   @id @default(uuid())
  fecha       DateTime
  area        String
  producto    String
  cantidad    Float
  horasMaquina Int
  paradas     Int
  observaciones String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}